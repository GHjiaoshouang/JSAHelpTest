<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JSAHelpEN</name>
    </assembly>
    <members>
        <member name="T:JSAHelpEN.toolsFactory">
            <summary>
            JsaHelper for .NET.
            </summary>
            <remarks>
            <code>
            <![CDATA[
            ===============================
            *   Author:     JSA         *
            *   Update:     2022.07     * 
            *   Vsersion:   8.0.0       *
            ===============================
            ]]>
            </code>
            </remarks>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.isReturnExceptionMessage">
            <summary>
            Is an error returned?
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.ApplicationFunc">
            <summary>
            Application function.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})">
            <summary>
            Method
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <param name="failureAction"></param>
            <param name="successAction"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Func{``0,System.Object})">
            <summary>
            Method
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <param name="failureAction"></param>
            <param name="successAction"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Func{``0})">
            <summary>
            Method
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <param name="failureAction"></param>
            <param name="successAction"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})">
            <summary>
            Method
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <param name="failureAction"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatch``2(``0,System.Func{``0,``1},System.Func{System.Exception,System.Object})">
            <summary>
            Method
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <param name="failureAction"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatch``2(``0,System.Func{``0,``1})">
            <summary>
            Method
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatchDefault``2(``0,System.Func{``0,``1})">
            <summary>
            Method
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatchLog``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})">
            <summary>
            Method (LOG)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <param name="failureAction"></param>
            <param name="successAction"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatchLog``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Func{``0,System.Object})">
            <summary>
            Method (LOG)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <param name="failureAction"></param>
            <param name="successAction"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatchLog``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Func{``0})">
            <summary>
            Method (LOG)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <param name="failureAction"></param>
            <param name="successAction"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatchLog``2(``0,System.Func{``0,``1},System.Action{System.Exception})">
            <summary>
            Method (LOG)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <param name="failureAction"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatchLog``2(``0,System.Func{``0,``1},System.Func{System.Exception,System.Object})">
            <summary>
            Method (LOG)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <param name="failureAction"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatchLog``2(``0,System.Func{``0,``1})">
            <summary>
            Method (LOG)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ApplicationFunc.HandingMethodTryCatchDefaultLog``2(``0,System.Func{``0,``1})">
            <summary>
            Method (LOG)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.SaveExcle">
            <summary>
            Excle convert json or json covert excle.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.SaveExcle.SaveTable(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Json is saved in table format.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=SaveTable(path,jsonContent,"1234","csv",isStrongLoggerRecord:true);//保存csv格式的文件到指定路径
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="saveFolderPath">folder path</param>
            <param name="content">json content</param>
            <param name="saveFileName">Save file name</param>
            <param name="type">The suffix of the saved file,default:csv
            </param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>No exception throw,true:Save successfully;false:Save failed.</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.LocalFileManage">
            <summary>
            Local file storage and reading.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.LocalFileManage.SplitString(System.String,System.String)">
            <summary>
            Split string.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            srring[] arr=LocalFileManage.SplitString("aabbccaavv","aa");//分割字符串
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="strContent">string</param>
            <param name="strSplit">Split character</param>
            <returns>No exceptions are thrown. Return on success:string[] ;Return on failure:string[0].</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.LocalFileManage.SplitString(System.String,System.String,System.Int32)">
            <summary>
            Split string.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string[] arr=LocalFileManage.SplitString("aabbccaavv","aa",2);//分割字符串
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="strContent">string</param>
            <param name="strSplit">Split character</param>
            <param name="count">Array index</param>
            <returns>No exceptions are thrown. Return on success:string[] ;Return on failure:string[0].</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.LocalFileManage.SaveFileToDirectory(System.String,System.String,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Save file to directory.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool falg=LocalFileManage.SaveFileToDirectory("D:/Program Files/java","D:/XXX.txt");//保存文件到指定文件夹
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="content">Data to save</param>
            <param name="folderPath">Save the full path of the folder:【D:/Program Files/java】</param>
            <param name="fileName">Save file name</param>
            <param name="encoding">Character encoding. The default is UTF-8</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>No exception throw,true:Save successfully;false:Save failed.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.LocalFileManage.SaveFileToEnumerationDirectory(System.String,JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate,System.String,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Save file to enumeration path.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=LocalFileManage.SaveFileToEnumerationDirectory("xxxx",FilePathEnumerate.Desktop,"D:/XXX.txt","新建文件夹");//保存文件到枚举路径
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="content">Data to save</param>
            <param name="filePath">Save enumeration path</param>
            <param name="fileName">Save file name.For example:[XXX.txt]</param>
            <param name="folderPath">Other folder paths in the enumeration path, empty by default.</param>
            <param name="encoding">Character encoding. The default is UTF-8.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>No exception throw,true:Save successfully;false:Save failed.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.LocalFileManage.ReadFileToEnumerationDirectory(JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate,System.String,System.Boolean)">
            <summary>
            Read files in enumeration directory.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string content=LocalFileManage.ReadFileToEnumerationDirectory(FilePathEnumerate.Desktop,"xxx.txt","新建文件夹");//读取枚举路径下文件
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="filePath">Read enumeration path</param>
            <param name="fileName">Read file name.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw,successfull:return string,failed:throw exception.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.LocalFileManage.ReadFileToDirectory(System.String,System.Boolean)">
            <summary>
            Read files in the full directory.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string content=LocalFileManage.SaveFileToDirectory("D:/xxx/aa/bb/cc/xxx.txt");//读取完整路径下文件
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="path">Read file complete path</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw,successfull:return string,failed:throw exception.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.LocalFileManage.SaveFileToProgramDirectory(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Save any files to program directory.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=LocalFileManage.SaveFileToProgramDirectory("xxx", "a.js", "resources\js", isStrongLoggerRecord: true);//保存文件到程序目录
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="content">Data to save</param>
            <param name="fileName">Save file name.</param>
            <param name="folderName">If the program directory has a folder, enter the folder path or name. By default, there is no folder.</param>
            <param name="debug">Whether to write to the debug folder?By default false.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>No exception throw,true:Save successfully;false:Save failed.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.LocalFileManage.ReadFileToProgramDirectory(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Read any file to program directory.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string content=LocalFileManage.ReadFileToProgramDirectory("a.js","resources\js");//读取程序目录下的指定文件
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="name">Read file name.</param>
            <param name="folderPath">If the program directory has a folder, enter the folder path or name. By default, there is no folder.</param>
            <param name="debug">Whether to write to the debug folder?By default false.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw,successfull:return string,failed:throw exception.</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.Logger">
            <summary>
            Logger
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.Logger.InitializationSetting">
            <summary>
            Global log initialization configuration.
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Logger.InitializationSetting.logPath">
            <summary>
            Enumeration paths that can be selected.
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Logger.InitializationSetting.isOpenRunningProgramLogger">
            <summary>
            Whether to record system running logs?The default is true.
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Logger.InitializationSetting.logType">
            <summary>
            Optional enumerations save types.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Logger.AllException``1(System.Action)">
            <summary>
            Global exception catch record.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            .AllException<object>(() =>{
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new Form1()); });
            ---------------------------------
            ]]>
            </code>
            </summary>
            <typeparam name="T">class</typeparam>
            <param name="ApplicationApps">object method</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Logger.AllError``1(System.Action)">
            <summary>
            Global exception catch record.For example:
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            AllError<object>(() =>{
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new Form1()); });
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <typeparam name="T">class</typeparam>
            <param name="ApplicationApps">object method</param>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.logSaveType">
            <summary>
            Log save type,default ".md".
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.logSaveType.ini">
            <summary>
            .ini
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.logSaveType.log">
            <summary>
            .log
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.logSaveType.md">
            <summary>
            .md
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.logSaveType.txt">
            <summary>
            .txt
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.logSaveType.html">
            <summary>
            .html
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.logSaveType.nul">
            <summary>
            .nul
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.LogsLevel">
            <summary>
            Log level
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.Explain">
            <summary>
            Info
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.Start">
            <summary>
            Start
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.End">
            <summary>
            End
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.Label">
            <summary>
            Label
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.CrossLine">
            <summary>
            CrossLine
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.ColorBlue">
            <summary>
            蓝色文字
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.ColoRed">
            <summary>
            红色文字
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.ColoGreen">
            <summary>
            绿色文字
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.ColoViolet">
            <summary>
            紫色文字
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.红色文字">
            <summary>
            红色文字  //#
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.火砖色文字">
            <summary>
            火砖色文字 //#
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.紫罗兰色文字">
            <summary>
            紫罗兰色文字 //#
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.紫红文字">
            <summary>
            紫红文字 //#
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.板岩蓝色文字">
            <summary>
            板岩蓝色文字
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.巧克力色文字">
            <summary>
            巧克力色文字 
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.番茄红色文字">
            <summary>
            番茄红色文字
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.金色文字">
            <summary>
            金色文字
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.墨绿色文字">
            <summary>
            墨绿色文字
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.绿黄色文字">
            <summary>
            绿黄色文字
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.中蓝色文字">
            <summary>
            中蓝色文字
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.宝石绿色文字">
            <summary>
            宝石绿色文字
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.青色文字">
            <summary>
            青色文字
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.Tiffany蓝">
            <summary>
            Tiffany蓝
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.Level1">
            <summary>
            级别1
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.Level2">
            <summary>
            级别2
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.Level3">
            <summary>
            级别3
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.Level4">
            <summary>
            级别4
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.LogsLevel.Level5">
            <summary>
            级别5
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.StringHandling">
            <summary>
            String detection, replacement,JSON、XML process  AND IP detection...
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.IPTesting(System.String)">
            <summary>
            Check whether it is an IP address.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=IPTesting("192.168.123.123");//判断是否合法IP地址
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="ip">Input the string to detect.</param>
            <returns>true:Is the correct IP address，false:Not the correct IP.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.StringNullTesting(System.String)">
            <summary>
            Checks if the string is empty or null.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=StringNullTesting("");//判断字符串是否为null、空或未定义。
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="content">Input the string to detect.</param>
            <returns>true:null，false:Not null.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.SubstringCount(System.String,System.String)">
            <summary>
            Retrieves the number of a character in a string.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            int num=SubstringCount("1122331122","11");//计算字符串出现的次数
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="str">The string to detect</param>
            <param name="substring">To detect characters in a string</param>
            <returns>No exception thrown, number returned.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.StringJSONTesting(System.String)">
            <summary>
            Verify that it is valid JSON.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=StringJSONTesting("123123");//JSON格式检测
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="json">Input the string to detect.</param>
            <returns>true:Is the json;false:Not a json.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.StringNumberTesting(System.String)">
            <summary>
            Check if the string is a pure number.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=StringNumberTesting("123");//数值类型检测
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="content">Input the string to detect.</param>
            <returns>true:number，false:Not number.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.Replace(System.String,System.String,System.String)">
            <summary>
            Replaces the specified string with the specified string.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string res=Replace("asdasdas","a","ii");//字符串替换生成新的字符串
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="content">Input the string to detect.</param>
            <param name="searching">The replacement string needs to be retrieved.</param>
            <param name="newString">The new string to be replaced.</param>
            <returns>Returns the processed string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.FormatJsonString(System.String)">
            <summary>
            Format JSON string.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string jsonStr=FormatJsonString(jsonContent);//JSON串格式化
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="jsonStr">Input JSON string.</param>
            <returns>Success: returns a formatted JSON string;Failure: Return the original JSON string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.StringJsonCompress(System.String)">
            <summary>
            JSON compress.For example:
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string jsonStr=StringJsonCompress(content);//JSON串压缩成一行。
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="json">JSON string.</param>
            <returns>Return compressed JSON string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.UnescapeJson(System.String,System.Boolean)">
            <summary>
            Get rid of the escape.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=UnescapeJson("hhhsdshkkjh123123");//去除转义
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="json">JSON string.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw.Returns the unescape JSON.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.EscapeJson(System.String,System.Boolean)">
            <summary>
            Increase the escape.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=EscapeJson("12213sdkahkajd");//增加转义
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="json">JSON string.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw.Returns the escape JSON.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.EscapeJsonLightweight(System.String,System.Boolean)">
            <summary>
            Increase the lightweight escape.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=EscapeJson(richTextBox1.Text);//增加转义(全替换)
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="json">JSON string.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>No exception throw.Returns the escape JSON.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.XmlToJson(System.String,System.Boolean)">
            <summary>
            xml convert JSON
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=XmlToJson(xmlString);//XML转JSON
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="xml"></param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.JsonToXML(System.String,System.Boolean)">
            <summary>
            JSON convert XML
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=JsonToXML(jsonString);//JSON转XML
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="JSON">JSON</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.FormatXML(System.String)">
            <summary>
            Format XML string.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=FormatXML(xmlStr);//格式化xml串
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="XMLstring"></param>
            <returns>No exception throw.Return XML string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.StringHandling.DifferentValidation(JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate,System.String,System.String)">
            <summary>
            Different validation.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=DifferentValidation(IsAnyEnumerate.verify30,str);//各种字符串检测
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="isAny">Any string.</param>
            <param name="str">string.</param>
            <param name="str2"></param>
            <returns>Return true or false.</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate">
            <summary>
            各种验证
            <example>List:</example>
            <code>
            <![CDATA[
            ---------------------------------
            【1】手机号合法性验证
            【2】判断字符串是不是都是由数字组成的
            【3】判断字符串是否是正数
            【4】判断是否是 中文名字 范围 2至4 个汉字
            【5】判断是否是中英文姓名
            【6】判断字符串是否全是中文
            【7】判断Email的格式是否正确
            【8】判断是否是正确的Url
            【9】判断是否为时间格式 23:59:59
            【10】验证一个月的31天
            【11】验证身份证号(15位或18位数字)
            【12】验证是否含有^%&’,;=?$\"等字符
            【13】验证用户密码，以字母开头，长度在6~18之间，只能包含字符、数字和下划线。
            【14】由数字、26个英文字母或者下划线组成的字符串
            【15】由26个小写英文字母组成的字符串
            【16】IP地址
            【17】中国邮政编码
            【18】腾讯QQ号
            【19】首尾空白字符
            【20】HTML标记
            【21】日期格式
            【22】短身份证号码(数字、字母x结尾)
            【23】国内电话号码
            【24】域名
            【25】由26个大写英文字母组成的字符串
            【26】浮点数
            【27】负浮点数
            【28】正浮点数
            【29】非零的正整数
            【30】非零的负整数
            【31】有两位小数的正实数
            【32】正数、负数、和小数
            【33】JSON格式检测
            ---------------------------------
            ]]>
            </code>   
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify1">
            <summary>
            手机号合法性验证
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify2">
            <summary>
            判断字符串是不是都是由数字组成的
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify3">
            <summary>
            判断字符串是否是正数
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify4">
            <summary>
            判断是否是 中文名字 范围 2至4 个汉字
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify5">
            <summary>
            判断是否是中英文姓名
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify6">
            <summary>
            判断字符串是否全是中文
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify7">
            <summary>
            判断Email的格式是否正确
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify8">
            <summary>
            判断是否是正确的Url
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify9">
            <summary>
            判断是否为时间格式 23:59:59
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify10">
            <summary>
            验证一个月的31天
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify11">
            <summary>
            验证身份证号(15位或18位数字)
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify12">
            <summary>
            <code>
            <![CDATA[验证是否含有^%&’,;=?$\"等字符]]>
            </code>
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify13">
            <summary>
            验证用户密码，以字母开头，长度在6~18之间，只能包含字符、数字和下划线
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify14">
            <summary>
            由数字、26个英文字母或者下划线组成的字符串
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify15">
            <summary>
            由26个小写英文字母组成的字符串
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify16">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify17">
            <summary>
            中国邮政编码
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify18">
            <summary>
            腾讯QQ号
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify19">
            <summary>
            首尾空白字符
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify20">
            <summary>
            HTML标记
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify21">
            <summary>
            日期格式
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify22">
            <summary>
            短身份证号码(数字、字母x结尾)
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify23">
            <summary>
            国内电话号码
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify24">
            <summary>
            域名
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify25">
            <summary>
            由26个大写英文字母组成的字符串
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify26">
            <summary>
            浮点数
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify27">
            <summary>
            负浮点数
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify28">
            <summary>
            正浮点数
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify29">
            <summary>
            非零的正整数
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify30">
            <summary>
            非零的负整数
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify31">
            <summary>
            有两位小数的正实数
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify32">
            <summary>
            正数、负数、和小数
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.StringHandling.IsAnyEnumerate.verify33">
            <summary>
            JSON格式检测
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.TableProcess">
            <summary>
            Table processing, converting datatable...
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.TableProcess.ConvertByDataSetToDictionary(System.Data.DataSet,System.Boolean)">
            <summary> 
            DatatSet converted to dictionary.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            Dictionary<string,List<Dictionary<string,object>>> dic= TableProcess.ConvertByDataSetToDictionary(ds);//DataSet转集合
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="ds"></param> 
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw.Return dictionary.</returns> 
        </member>
        <member name="M:JSAHelpEN.toolsFactory.TableProcess.ConvertByDataTableToDictionary(System.Data.DataTable,System.Boolean)">
            <summary>
            Datatable  converted to list.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            List<Dictionary<string, object>> list= TableProcess.ConvertByDataTableToDictionary(dt);//DataTable转集合
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="dt">datatable</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw.Return List.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.TableProcess.ConvertByDataTableToList``1(System.Data.DataTable,System.Boolean)">
            <summary>
            DataTable convert List.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            List<T> list= TableProcess.ConvertByDataTableToList<T>(dt);//DataTable转 对象
            ---------------------------------
            ]]>
            </code>
            </summary>
            <param name="datas">DataTable</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>List</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.TableProcess.ConvertByListToDataTable(System.Collections.IList,System.Boolean)">
            <summary>
            List convert DataTable.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            dt= TableProcess.ConvertByListToDataTable(list);//集合转DataTable
            ---------------------------------
            ]]>
            </code>
            </summary>
            <param name="list">list</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>return DataTable。</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.TableProcess.ConvertByListToDataTable2``1(System.Collections.Generic.List{``0},System.Boolean)">
            <summary>
            List convert DataTable.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            dt= TableProcess.ConvertByListToDataTable2<object>(list);//集合转DataTable
            ---------------------------------
            ]]>
            </code>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns></returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.EncryptionAndDecryption">
            <summary>
            Encryption and decryption.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.MD5Encrypt(System.String,System.Boolean)">
            <summary>
            MD5 encryption.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=MD5Encrypt("123");//MD5加密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="input">string</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.AESEncrypt2(System.String,System.String,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode,System.Boolean)">
            <summary>
            AES encryption algorithm.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=AESEncrypt2("123",secretKey);//AES算法加密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="originalStr">string</param>
            <param name="secretKey">Optional. The AES key must be 32 bits long.</param>
            <param name="mode">Cipher Mode</param>
            <param name="paddingMode">Padding Mode</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw.Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.AESDecrypt2(System.String,System.String,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode,System.Boolean)">
            <summary>
            AES decrypt
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=AESDecrypt2("xxx",secretKey);//AES算法解密
            ---------------------------------
            ]]>
            </code>  
            </summary>.
            <param name="secretStr">string</param>
            <param name="secretKey">Optional. The AES key must be 32 bits long.</param>
            <param name="mode">Cipher Mode</param>
            <param name="paddingMode">Padding Mode</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.Returns the decrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.AESEncrypt(System.String,System.String,System.Boolean)">
            <summary>
            AES encryption algorithm.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=AESEncrypt("123",secretKey);//AES加密
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="value">string</param>
            <param name="key">Optional. The AES key must be 32 bits long.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw.Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.AESDecrypt(System.String,System.String,System.Boolean)">
            <summary>
            Aes decrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=AESDecrypt("xxx",secretKey);//AES解密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="value">string</param>
            <param name="key">Optional. The AES key must be 32 bits long.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw.Returns the decrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.Base64Encrypt(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Base64 coder.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=Base64Encrypt("123");//Base64加密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="code">string.</param>
            <param name="encoding">Encoding Indicates the character Encoding.</param> 
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.Base64Decrypt(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Base64 encoder.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=Base64Decrypt("xxx");//Base64解密
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="code">string.</param>
            <param name="encoding">Encoding Indicates the character Encoding.</param> 
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the decrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.DESEncrypt(System.String,System.String,System.Boolean)">
            <summary>
            DES encryption.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=DESEncrypt("123",key);//DES加密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="value">string</param>
            <param name="key">key(8/16)</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.DESDecrypt(System.String,System.String,System.Boolean)">
            <summary>
            DES decipher.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=DESDecrypt("123",key);//DES解密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="value">string</param>
            <param name="key">key(8/16)</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the decrypted string.</returns> 
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.PBKDF2Encrypt(System.String,System.Boolean)">
            <summary>
            PBKDF2 encrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=PBKDF2Encrypt("123");//PBKDF2加密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="str">string</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.RSAEncrypt(System.String,System.String,System.Boolean)">
            <summary>
            RSA encrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=RSAEncrypt("123");//RSA加密
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="publickey">public key</param>
            <param name="content">string</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.RSADecrypt(System.String,System.String,System.Boolean)">
            <summary>
            RSA decrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=RSADecrypt("123");//RSA解密
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="content">string</param> 
            <param name="privatekey">private key</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the decrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.RSAGetPublicKeyOrPrivateKey(System.String@,System.String@,System.Boolean)">
            <summary>
            Obtain the key used for encryption. 
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=RSAGetPublicKeyOrPrivateKey(ref publicKey,ref PriveKey);//生成RSA公钥私钥
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <remarks>(THE RSA algorithm is an asymmetric cryptographic algorithm, which requires a pair of keys. If one key is used for encryption, the other key can be used for decryption.)</remarks>
            <returns>Exception throw!Returns keys.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.SHA1Encrypt(System.String,System.Boolean)">
            <summary>
            SHA1 encrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=SHA1Encrypt("123");//SHA1加密
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="value">string</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.SHA224Encrypt(System.String,System.Boolean)">
            <summary>
            SHA224 encrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=SHA224Encrypt("123");//SHA224加密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="src"></param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.SHA512Encrypt(System.String,System.Boolean)">
            <summary>
            SHA512 encrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=SHA512Encrypt("123");//SHA512加密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="str"></param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.SHA256Encrypt(System.String,System.Boolean)">
            <summary>
             SHA256 encrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=SHA256Encrypt("123");//SHA256加密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="data">string</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.SHA384Encrypt(System.String,System.Boolean)">
            <summary>
            SHA384 encrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=SHA384Encrypt("123");//SHA384加密
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="str">string</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.RC4Encrypt(System.String,System.String,System.Boolean)">
            <summary>
            RC4 encrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=RC4Encrypt("123");//RC4加密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="data">string</param>
            <param name="key">key</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.RC4Decrypt(System.String,System.String,System.Boolean)">
            <summary>
            RC4 decrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=RC4Decrypt("123");//RC4解密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="data">string</param>
            <param name="key">key</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the decrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.TripdesEncrypt(System.String,System.String,System.Boolean)">
            <summary>
            tripdes encrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=TripdesEncrypt("123",key);//tripdes加密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="toEncrypt">string</param>
            <param name="key">32/key</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.UrlEncodeEncrypt(System.String,System.Text.Encoding,System.Boolean,System.Boolean)">
            <summary>
            UrlEncode for characters (Java compatible).
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=UrlEncodeEncrypt("123");//URL加密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="text">string</param>
            <param name="encod">coded format</param>
            <param name="cap"></param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.UrlEncodeDecrypt(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            UrlDecode for characters (Java compatible).
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=UrlEncodeDecrypt("xxx");//URL解密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="encodString">string</param>
            <param name="encod">coded format</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the decrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.UrlEncodeEncrypt2(System.String,System.Boolean)">
            <summary>
            UrlEncode for characters (Java compatible).
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=UrlEncodeEncrypt2("123");//URL算法加密
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="str">string</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.UrlEncodeDecrypt2(System.String,System.Boolean)">
            <summary>
             UrlDecode for characters (Java compatible).
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=UrlEncodeDecrypt2("123");//URL算法解密
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="str">string</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the decrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.HASHEncrypt(System.String,System.Boolean)">
            <summary>
            HASH encrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=HASHEncrypt("123");//哈希加密
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="Source">string</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.HASH2Encrypt(System.String,System.Boolean)">
            <summary>
            HASH2 encrypt.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=HASH2Encrypt("xxx");//哈希算法加密
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="str">string</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.EncryptionAndDecryption.Sm2GBEncrypt">
            <summary>
            
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.Sm2GBEncrypt.signSm3WithSm2(System.String,System.String,System.String,System.Boolean)">
            <summary>
            SM2 GB encryption.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=signSm3WithSm2(sm4key,prvkey,"123");//签名
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="sm4key">sm4key</param>
            <param name="prvkey">private key</param>
            <param name="data">data</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the decrypted string. </returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.Sm2GBEncrypt.verifySm3WithSm2(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            SM2 GB signature verification.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=verifySm3WithSm2("xxx",sm4key,signData,pubKey);//验证签名
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="msg">content</param>
            <param name="sm4key">sm4key</param>
            <param name="signData">data</param>
            <param name="pubKey">public key</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>No throw exception.Success:true;Fault:false.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.SQLSpecificEncryption(System.String,System.String,System.Boolean)">
            <summary>
            SQL specific encryption.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=SQLSpecificEncryption("select");//SQL专属加密
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="value">string</param>
            <param name="key">key</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the encrypted string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.EncryptionAndDecryption.SQLSpecificDecryption(System.String,System.String,System.Boolean)">
            <summary>
            SQL specific decryption.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=SQLSpecificDecryption("select");//SQL专属解密
            ---------------------------------
            ]]>
            </code>     
            </summary>
            <param name="value">string</param>
            <param name="key">key</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Returns the decrypted string.</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.JsonPars">
            <summary>
            JSON String parsing.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.JsonPars.ConvertByJsonToAnyT``1(System.String,System.Boolean)">
            <summary>
            JSON format characters are converted to objects of type T.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            MyClass mc=ConvertByJsonToAnyT<MyClass>(json);//JSON转实体类
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <typeparam name="T">arbitrary type.</typeparam>
            <param name="jsonStr">JSON string.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Return any type.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.JsonPars.ConvertByJsonToList``1(System.String,System.Boolean)">
            <summary>
            JSON format characters are converted to objects of list.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            List<MyClass> mc=ConvertByJsonToList<List<MyClass>>(json);//JSON转集合
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <typeparam name="T">arbitrary type.</typeparam>
            <param name="jsonStr">JSON string.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Success:return list,Fault:throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.JsonPars.GetJsonValue(System.String,System.String,System.Boolean)">
            <summary>
            Get json parameters based on the json structure and the name of the JSON value.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            List<string> ls=GetJsonValue("root/name/[id]",jsonStr);//获取某个JSON节点，并生成集合
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="path">One name：[name];More than one name：[root/name/verion];Include"[]"：[root/name/[id]]</param>
            <param name="json">JSON string.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw.Return value</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.JsonPars.ReplaceJsonByDictionary(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            Replace the node to generate new JSON.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            Dictionary<string, string> dic=new Dictionary<string, string>();
            dic.Add("sex","F");
            string str=ReplaceJsonByDictionary(jsonStr,dic);//替换json节点值，生成新的json串
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="json">JSON string.</param>
            <param name="keys">Replace the node and the parameter value to be replaced.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw.Returns the JSON string with the replacement value.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.JsonPars.ConvertByListToJson``1(System.Collections.Generic.IList{``0},System.String,System.Boolean)">
            <summary>
            List is converted to Json.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            IList<MyClass>  list=new IList<MyClass>(); 
            string str=ConvertByListToJson(list,"");//集合转JSON串
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <typeparam name="T">Type method.</typeparam>
            <param name="list">list</param>
            <param name="ParentNodeName">Parent node name.[::父节点名称::]</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw.Return JSON string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.JsonPars.ConvertByJsonToDataTable(System.String,System.Boolean)">
            <summary>
            JSON format characters are converted to objects of DataTable.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            DataTable dt=ConvertByJsonToDataTable(jsonStr);//json转DataTable
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="json">JSON string.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw.Return a datatable.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.JsonPars.SerializeObject(System.Object,System.Object[],System.Boolean,System.Boolean,System.String,System.Int32,System.Object[],System.Boolean)">
            <summary>
            Serialized JSON string,
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            object[] param = new object[] { "data","list", "list2", "exp_content" };//存在数组的参数
            object[] del = new object[] { null, 0,"", "0" };//需要筛选剔除的值的参数
            string json=SerializeObject(Any,param,true,deletePara:del);//json序列化
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="obj">object</param>
            <param name="param">To prevent the existence of embedded escape characters, specify the name of the node with escape characters.</param>
            <param name="format">Is it formatted?</param>
            <param name="sort">Whether to sort or not?</param>
            <param name="dateFormat">datetime format.default:yyyy-MM-dd HH:mm:ss</param>
            <param name="index">don't make sense.</param>
            <param name="deletePara">Filter out certain values.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>No Exception throw.Returns the serialized JSON string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.JsonPars.SerializeObject(System.String,System.Object[],System.Boolean,System.Boolean,System.String,System.Int32,System.Object[],System.Boolean)">
            <summary>
            Serialized JSON string,
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string json="xxxxx";//需要处理的json串
            object[] param = new object[] { "data","list", "list2", "exp_content" };//存在数组的参数
            object[] del = new object[] { null, 0,"", "0" };//需要筛选剔除的值的参数
            string jsonStr=SerializeObject(json,param,true,deletePara:del);//json序列化
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="json">JSON string.</param>
            <param name="param">The reference type assignment may be NULL.To prevent the existence of embedded escape characters, you need to specify the name of the node where escape characters exist.</param>
            <param name="format">Is it formatted</param>
            <param name="sort">Whether to sort or not?</param>
            <param name="dateFormat">datetime format.default:yyyy-MM-dd HH:mm:ss</param>
            <param name="index">don't make sense.</param>
            <param name="deletePara">Filter out certain values.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>No Exception throw.Returns the serialized JSON string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.JsonPars.ConvertByJsonToDictionary(System.String,System.Boolean)">
            <summary>
            Converting the JSON object to Dictionary.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            Dictionary<string, object> dc=ConvertByJsonToDictionary(jsonStr);//JSON转字典
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="json">JSON string.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw.Return a list.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.JsonPars.ConvertByJsonToDictionarySort(System.String,System.Boolean)">
            <summary>
            The JSON object is converted to Dictionary and sorted by ASCLL.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            Dictionary<string, object> dc=ConvertByJsonToDictionarySort(jsonStr);//JSON转字典并排序（ASCLL）
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="json">JSON string.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw.Return a sorted list.</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.PollyManage">
            <summary>
            Circuit breaker.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PollyManage.CircuitBreaker(System.Func{System.Object,System.Object},System.Func{System.Object,System.Object},System.Double,System.Boolean)">
             <summary>
             No return fuse, circuit breaker mechanism (void no return, with custom exception delegate handling).
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            JSAHelpEN.toolsFactory.PollyManage.CircuitBreaker(res =>
            {
                for (int i = 0; i < 3; i++)
                {
                    Thread.Sleep(1000);
                }
                return null;
            }, err =>
            {
                throw (Exception)err;
            }, 5);
             ---------------------------------
             ]]>
             </code>    
             </summary>
             <param name="p">Delegate method to set fuse (parameter optional).</param>
             <param name="ps">Delegate exception handling method to set, to be called after method fuses.</param>
             <param name="TimeOut">If the request needs to wait for a time, set the timeout period. The unit is second and the character type is double. For example, 3 indicates 3 seconds</param>
             <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PollyManage.CircuitBreaker(System.Action,System.Func{System.Object,System.Exception},System.Double,System.Boolean)">
             <summary>
             No return fuse, circuit breaker mechanism (void no return, with custom exception delegate handling) calls example:
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            JSAHelpEN.toolsFactory.PollyManage.CircuitBreaker(() => {
                for (int i=0;i<3;i++) {
                    Thread.Sleep(1000);
                }
            }, err => {
                return null;
            },5);//断路机制
             ---------------------------------
             ]]>
             </code>   
             </summary>
             <param name="p">Delegate method to set fuse (parameter optional).</param>
             <param name="ps">Delegate exception handling method to set, to be called after method fuses.</param>
             <param name="TimeOut">If the request needs to wait for a time, set the timeout period. The unit is second and the character type is double. For example, 3 indicates 3 seconds.</param>
             <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PollyManage.CircuitBreaker(System.Action,System.Func{System.Object,System.Object},System.Double,System.Boolean)">
             <summary>
             No return fuse, circuit breaker mechanism (void no return, with custom exception delegate handling) calls example:
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            JSAHelpEN.toolsFactory.PollyManage.CircuitBreaker(() =>
            {
                for (int i = 0; i < 3; i++)
                {
                    Thread.Sleep(1000);
                }
            }, err =>
            {
                return new object();
            }, 5);//断路机制
             ---------------------------------
             ]]>
             </code>   
             </summary>
             <param name="p">Delegate method to set fuse (parameter optional).</param>
             <param name="ps">Delegate exception handling method to set, to be called after method fuses</param>
             <param name="TimeOut">If the request needs to wait for a time, set the timeout period. The unit is second and the character type is double. For example, 3 indicates 3 seconds.</param>
             <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PollyManage.CircuitBreakerOther(System.Func{System.Object,System.Object},System.Func{System.Object,System.Object},System.Double,System.Boolean)">
             <summary>
             No return fuses, circuit breaker mechanism (object returns, with custom exception delegate handling) examples of calls:
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            JSAHelpEN.toolsFactory.PollyManage.CircuitBreakerOther(res =>
            {
                for (int i = 0; i < 3; i++)
                {
                    Thread.Sleep(1000);
                }
                return null;
            }, err =>
            {
                throw (Exception)err;
            }, 5);//断路机制
             ---------------------------------
             ]]>
             </code>   
             </summary>
             <param name="p">Delegate method to set fuse (parameter optional).</param>
             <param name="ps">Delegate exception handling method to set, to be called after method fuses.</param>
             <param name="TimeOut">If the request needs to wait for a time, set the timeout period. The unit is second and the character type is double. For example, 3 indicates 3 seconds.</param>
             <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PollyManage.CircuitBreakerOther(System.Func{System.Object},System.Func{System.Object,System.Exception},System.Double,System.Boolean)">
            <summary>
            No return fuses, circuit breaker mechanism (object returns, with custom exception delegate handling) examples of calls:
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            {
                return (string)CircuitBreakerOther(
                re =>; ClientWCF("http://localhost/A.asmx",para, "ENC", "", false),
                err =>; private ErrorStr(),  5);
             }//断路机制
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="p">Delegate method to set fuse (parameter optional).</param>
            <param name="ps">Delegate exception handling method to set, to be called after method fuses.</param>
            <param name="TimeOut">If the request needs to wait for a time, set the timeout period. The unit is second and the character type is double. For example, 3 indicates 3 seconds.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PollyManage.CircuitBreakerOther(System.Action,System.Func{System.Object,System.Exception},System.Double,System.Boolean)">
             <summary>
             No return fuses, circuit breaker mechanism (object returns, with custom exception delegate handling) examples of calls:
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            JSAHelpEN.toolsFactory.PollyManage.CircuitBreakerOther(() =>
            {
                for (int i = 0; i < 3; i++)
                {
                    Thread.Sleep(1000);
                }
            }, err =>
            {
                return null;
            }, 5);//断路机制
             ---------------------------------
             ]]>
             </code>   
             </summary>
             <param name="p">Delegate method to set fuse (parameter optional).</param>
             <param name="ps">Delegate exception handling method to set, to be called after method fuses.</param>
             <param name="TimeOut">If the request needs to wait for a time, set the timeout period. The unit is second and the character type is double. For example, 3 indicates 3 seconds.</param>
             <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PollyManage.CircuitBreakerOther(System.Action,System.Func{System.Object,System.Object},System.Double,System.Boolean)">
             <summary>
             No return fuses, circuit breaker mechanism (object returns, with custom exception delegate handling) examples of calls:
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            JSAHelpEN.toolsFactory.PollyManage.CircuitBreakerOther(() =>
            {
                for (int i = 0; i < 3; i++)
                {
                    Thread.Sleep(1000);
                }
            }, err =>
            {
                return new object();
            }, 5);//断路机制
             ---------------------------------
             ]]>
             </code>   
             </summary>
             <param name="p">Delegate method to set fuse (parameter optional).</param>
             <param name="ps">Delegate exception handling method to set, to be called after method fuses.</param>
             <param name="TimeOut">If the request needs to wait for a time, set the timeout period. The unit is second and the character type is double. For example, 3 indicates 3 seconds.</param>
             <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PollyManage.Retry(System.Func{System.Object,System.Object},System.Int32,System.Double,System.Boolean)">
             <summary>
             There is a return circuit breaker, retry mechanism (object returns, without custom exception delegate handling), call example:
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            JSAHelpEN.toolsFactory.PollyManage.Retry(res =>
            {
                for (int i = 0; i < 3; i++)
                {
                    Thread.Sleep(1000);
                }
                return new object();
            }, 1, 3);//重试机制
             ---------------------------------
             ]]>
             </code>   
             </summary>
             <param name="p">Delegate method to set fuse (parameter optional).</param>
             <param name="retryNumber">Number of retries after an exception, unit: int.</param>
             <param name="TimeOut">If the request needs to wait for a time, set the timeout period. The unit is second and the character type is double. For example, 3 indicates 3 seconds.</param>
             <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
             <returns>Returns the processed parameter of type Object.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PollyManage.Retry(System.Func{System.Object},System.Int32,System.Double,System.Boolean)">
             <summary>
             There is a return circuit breaker, retry mechanism (object returns, without custom exception delegate handling), call example:
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            JSAHelpEN.toolsFactory.PollyManage.Retry(() =>
            {
                for (int i = 0; i < 3; i++)
                {
                    Thread.Sleep(1000);
                }
                return new object();
            }, 1, 5);//重试机制
             ---------------------------------
             ]]>
             </code>   
             </summary>
             <param name="p">Delegate method to set fuse (parameter optional).</param>
             <param name="retryNumber">Number of retries after an exception, unit: int.</param>
             <param name="TimeOut">If the request needs to wait for a time, set the timeout period. The unit is second and the character type is double. For example, 3 indicates 3 seconds.</param>
             <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
             <returns>Returns the processed parameter of type Object.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PollyManage.Retry(System.Action,System.Int32,System.Double,System.Boolean)">
             <summary>
             There is a return circuit breaker, retry mechanism (object returns, without custom exception delegate handling), call example:
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            JSAHelpEN.toolsFactory.PollyManage.Retry(() =>
            {
                for (int i = 0; i < 3; i++)
                {
                    Thread.Sleep(1000);
                }
            }, 1, 5);//重试机制
             ---------------------------------
             ]]>
             </code>   
             </summary>
             <param name="p">Delegate method to set fuse (parameter optional).</param>
             <param name="retryNumber">Number of retries after an exception, unit: int.</param>
             <param name="TimeOut">If the request needs to wait for a time, set the timeout period. The unit is second and the character type is double. For example, 3 indicates 3 seconds.</param>
             <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
             <returns>Returns the processed parameter of type Object.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PollyManage.RetryOther(System.Func{System.Object,System.Object},System.Int32,System.Double,System.Boolean)">
             <summary>
             With return circuit breaker, retry mechanism (void no return, no custom exception delegate processing), call example:
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            JSAHelpEN.toolsFactory.PollyManage.RetryOther(res =>
            {
                for (int i = 0; i < 3; i++)
                {
                    Thread.Sleep(1000);
                }
                return new object();
            }, 1, 5);//重试机制
             ---------------------------------
             ]]>
             </code>   
             </summary>
             <param name="p">Delegate method to set fuse (parameter optional).</param>
             <param name="retryNumber">Number of retries after an exception, unit: int.</param>
             <param name="TimeOut">If the request needs to wait for a time, set the timeout period. The unit is second and the character type is double. For example, 3 indicates 3 seconds.</param>
             <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
             <returns>There is no return.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PollyManage.RetryOther(System.Func{System.Object},System.Int32,System.Double,System.Boolean)">
             <summary>
             With return circuit breaker, retry mechanism (void no return, no custom exception delegate processing), call example:
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            JSAHelpEN.toolsFactory.PollyManage.RetryOther(() =>
                {
            
                    for (int i = 0; i< 3; i++)
                    {
                        Thread.Sleep(1000);
                    }
                   return new object ();
            
                }, 1, 5);//重试机制
             ---------------------------------
             ]]>
             </code>   
             </summary>
             <param name="p">Delegate method to set fuse (parameter optional).</param>
             <param name="retryNumber">Number of retries after an exception, unit: int.</param>
             <param name="TimeOut">If the request needs to wait for a time, set the timeout period. The unit is second and the character type is double. For example, 3 indicates 3 seconds.</param>
             <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PollyManage.RetryOther(System.Action,System.Int32,System.Double,System.Boolean)">
             <summary>
             With return circuit breaker, retry mechanism (void no return, no custom exception delegate processing), call example:
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            JSAHelpEN.toolsFactory.PollyManage.RetryOther(() =>
            {
                for (int i = 0; i < 3; i++)
                {
                    Thread.Sleep(1000);
                }
            }, 1, 5);//重试机制
             ---------------------------------
             ]]>
             </code>   
             </summary>
             <param name="p">Delegate method to set fuse (parameter optional).</param>
             <param name="retryNumber">Number of retries after an exception, unit: int.</param>
             <param name="TimeOut">If the request needs to wait for a time, set the timeout period. The unit is second and the character type is double. For example, 3 indicates 3 seconds.</param>
             <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
             <returns>There is no return.</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.UncompressZIP">
            <summary>
            ZIP compression decompress.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.UncompressZIP.ZIPCompression(System.String,System.String,System.Boolean)">
            <summary>
            Compression (ZIP format)
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=ZIPCompression(@"D:\2022Git云\JSAHelpEN\JSAHelpEN.Test\JSAHelpENForFormToNet60/myselfFolderTemp",@"D:\2022Git云\JSAHelpEN\JSAHelpEN.Test\JSAHelpENForFormToNet60/ZIPtest.zip");//指定路径压缩
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="targetFile">Directory to be compressed.</param>
            <param name="zipFile">Compressed file path.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Success:true;Fault:false.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.UncompressZIP.ZIPdecompress(System.String,System.String,System.Boolean)">
            <summary>
            decompress
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=ZIPCompression(@"D:\2022Git云\JSAHelpEN\JSAHelpEN.Test\JSAHelpENForFormToNet60/myselfFolderTemp",@"D:\2022Git云\JSAHelpEN\JSAHelpEN.Test\JSAHelpENForFormToNet60/ZIPtest.zip");//指定路径解压
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="targetFile">Path after decompressing the file.</param>
            <param name="zipFile">Path for decompressing files.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <returns>Exception throw!Success:true;Fault:false.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.UncompressZIP.ZIPdecompressPassword(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Unzip encrypted packages (support RAR, ZIP).
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=ZIPdecompressPassword("D:\\ooopssss","D:\\ooops\\SET.zip",true,"123");//指定路径解压(有密码)
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="outFileDirectory">Decompress the file directory.</param>
            <param name="fromFilePath">Full path of files to be decompressed.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false</param>
            <param name="password">password</param>
            <returns>Exception throw!Success:true;Fault:false.</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.UncompressZIP.GitHubZip">
            <summary>
            Zip compression help class.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.UncompressZIP.GitHubZip.GitHubZipZipDir(System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Zip folder.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            GitHubZipZipDir("xxx/NEWServer","xxx/NEWServer/ysb.zip");//压缩文件夹
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="dir">folder</param>
            <param name="zipFile">Compressed file name.</param>
            <param name="password">Compression password.</param>
            <param name="level">Compression rate 0 (no compression) 9 (highest compression)</param>
            <param name="isStrongLoggerRecord"></param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.UncompressZIP.GitHubZip.GitHubZipUnZip(System.String,System.String,System.Boolean)">
            <summary>  
            Decompress the zip file.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            GitHubZipUnZip("xxxx/ysbs.zip","xxxx/NEWServer/ee");//文件解压缩
            ---------------------------------
            ]]>
            </code>    
            </summary>  
            <param name="zipFile">Compressed file path.</param>
            <param name="dir">The directory for storing decompressed files is empty. By default, the directory is in the same level as the compressed file and has the same name as the compressed file.</param>
            <param name="isStrongLoggerRecord"></param>  
            <returns>Exception throw!Returns true on success, false on failure</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.UncompressZIP.GitHubZip.GitHubZipZipFile(System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary> 
            Compressing a single file.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            GitHubZipZipFile("xxx/NEWServer/xxx.txt","xxx/NEWServer/ysb.zip");//单个文件压缩
            ---------------------------------
            ]]>
            </code>    
            </summary> 
            <param name="file"></param> 
            <param name="zipFile">The file name to compress, full path.</param>
            <param name="password">Pressure lodge password</param>
            <param name="level">Compression level</param>
            <param name="isStrongLoggerRecord"></param>
            <returns>Exception throw!Returns true on success, false on failure</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.UncompressZIP.GitHubZip.GitHubZipZipMore(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Compress multiple directories or files.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            GitHubZipZipMore("xxx/NEWServer/xxx.txt","xxx/NEWServer/ysb.zip");//多个目录或文件压缩
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="DirOrFileList">A folder or file to be compressed, in full path format, is a collection.</param>
            <param name="zipFile">Compressed file name in full path format.</param>
            <param name="password">Pressure lodge password</param>
            <param name="level">Compression level</param>
            <param name="isStrongLoggerRecord"></param>
            <returns>Exception throw!Returns true on success, false on failure</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.XmlPars">
            <summary>
            XML String parsing.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.Read(System.String,JSAHelpEN.toolsFactory.XmlPars.getXmlFileTypeEnumeration,System.String,System.String,System.Boolean)">
            <summary>
            Reading XML data.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            XmlPars.Read(PathHelper.GetSavePath(LocalFileManage.FilePathEnumerate.ProgramNoDebug, "Test.xml", "ss\\rr"), XmlPars.getXmlFileTypeEnumeration.path, "/books/book/author", "");//获取xml串指定节点的值
            ---------------------------------
            ]]>
            </code>            
            </summary>
            <exception cref="T:System.Exception">异常被抛出了！</exception>
            <param name="path">XML file path or XML file content.</param>
            <param name="getXmlFileType">File type.</param>
            <param name="node">Node path.</param>
            <param name="attribute">Property name, returns the property value if it is not null, otherwise returns the concatenation value.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.Return string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.Insert(System.String,JSAHelpEN.toolsFactory.XmlPars.getXmlFileTypeEnumeration,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
             Insert data to form new XML.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string newXML=XmlPars.Insert(xmlStr, XmlPars.getXmlFileTypeEnumeration.content, "books/book", "mmm", "", "000000");//向xml中插入数据生成新的xml
            ---------------------------------
            ]]>
            </code>      
            </summary>
            <param name="path">path</param>
            <param name="getXmlFileType">File type.</param>
            <param name="node">Node path.</param>
            <param name="element">Element name, inserts a new element if not null, otherwise inserts attributes in that element.</param>
            <param name="attribute">Attribute name, inserts the element attribute value if not null, inserts the element value otherwise.</param>
            <param name="value">Insert value.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.Return XML string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.Update(System.String,JSAHelpEN.toolsFactory.XmlPars.getXmlFileTypeEnumeration,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Modify  XML strings.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            newXML = XmlPars.Update(newXML,XmlPars.getXmlFileTypeEnumeration.content,"books/book/mmm","","11111");//修改XML节点的值，生成新的xml串
            ---------------------------------
            ]]>
            </code>    
            </summary>
            <param name="path">path</param>
            <param name="getXmlFileType">File type.</param>
            <param name="node">node</param>
            <param name="attribute">Property name. If it is not empty, modify the value of the node property. Otherwise, modify the value of the node.</param>
            <param name="value">value</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.Return XML string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.Delete(System.String,JSAHelpEN.toolsFactory.XmlPars.getXmlFileTypeEnumeration,System.String,System.String,System.Boolean)">
            <summary>
            Delete  XML strings.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            newXML = XmlPars.Delete(newXML,XmlPars.getXmlFileTypeEnumeration.content,"books/book/mmm","");//删除XML串某个节点或节点的值，生成新的xml
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="path">path</param>
            <param name="getXmlFileType">File type.</param>
            <param name="node">node</param>
            <param name="attribute">Attribute name, remove the node attribute value when not empty, otherwise delete the node value.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.Return XML string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.Notecout(System.String,JSAHelpEN.toolsFactory.XmlPars.getXmlFileTypeEnumeration,System.String,System.Boolean)">
            <summary>
            Gets the number of nodes.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            int count = XmlPars.Notecout(newXML,XmlPars.getXmlFileTypeEnumeration.content, "books/book/author");//获取指定节点个数
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="path">path</param>
            <param name="getXmlFileType">getXmlFileTypeEnumeration</param>
            <param name="node">node name</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>No exception throw.Success:return count;Fault:return 0.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.ReadNodeslist(System.String,JSAHelpEN.toolsFactory.XmlPars.getXmlFileTypeEnumeration,System.String,System.Boolean)">
            <summary>
            Gets the  nodes list.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            List<string> list = XmlPars.ReadNodeslist(newXML,XmlPars.getXmlFileTypeEnumeration.content, "books/book/author");//获取指定节点集合
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="path">path</param>
            <param name="getXmlFileType">getXmlFileTypeEnumeration</param>
            <param name="node">node name</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.Success:return list;Fault:throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.Serialize``1(``0,System.Text.Encoding)">
            <summary>
            XML Serialize
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=Serialize(Myclass);//XML序列化
            ---------------------------------
            ]]>
            </code>       
            </summary>
            <param name="obj">Any</param>
            <param name="encoding">Encoding</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.Serialize(System.Object,System.Type,System.Text.Encoding)">
            <summary>
            XML Serialize
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            Myclass my=new Myclass();
            string str=Serialize(Myclass,my.GetType());//XML序列化
            ---------------------------------
            ]]>
            </code>       
            </summary>
            <param name="obj">Any</param>
            <param name="type">type</param>
            <param name="encoding">Encoding</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.Serialize2(System.Object,System.Boolean)">
            <summary>
            XML Serialize
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=Serialize2(Myclass);//XML序列化
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="obj">Any</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.Deserialize2(System.String,System.Type,System.Boolean)">
            <summary>
            XML deserialize.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            Myclass my=new Myclass();
            string str=Deserialize2(xmlStr,my.GetType());//XM反序列化
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.Deserialize2``1(System.String,System.Boolean)">
            <summary>
            XML Deserialize
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=Deserialize2<Myclass>(xmlStr);//XM反序列化
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.Deserialize``1(System.String)">
            <summary>
                XML Deserialize
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=Deserialize<Myclass>(xmlStr);//XM反序列化
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml"></param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.Deserialize``1(System.String,System.Type,System.Boolean)">
            <summary>
                XML Deserialize
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            Myclass my=new Myclass();
            string str=Deserialize(xmlStr,my.GetType());//XM反序列化
            ---------------------------------
            ]]>
            </code>     
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml"></param>
            <param name="type"></param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.Deserialize``1(System.String,System.Type,System.Boolean,System.Type[])">
            <summary>
                XML Deserialize
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            Myclass my=new Myclass();
            string str=Deserialize<Myclass>(xmlStr,my.GetType());//XM反序列化
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml"></param>
            <param name="type"></param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <param name="types"></param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.ConvertDataTableToXML(System.Data.DataTable,System.Boolean)">
            <summary>
            DataTable convert XML.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=ConvertDataTableToXML(dt);//DataTable转xml
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="xmlDS">DataTable</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>No exception throw.Return String.Empty.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.ConvertByXmlToDataSet(JSAHelpEN.toolsFactory.XmlPars.getXmlFileTypeEnumeration,System.String,System.Boolean)">
            <summary>
            XML convert Dataset
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            DataSet ds=ConvertByXmlToDataSet(getXmlFileTypeEnumeration.content,xmlString);//XML转DataSet
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="getXmlFileType">getXmlFileTypeEnumeration</param>
            <param name="xmlString">xmlString</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.ConvertByXmlToDataTable(JSAHelpEN.toolsFactory.XmlPars.getXmlFileTypeEnumeration,System.String,System.Boolean)">
            <summary>
            XML convert Dataset
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            DataTable dt=ConvertByXmlToDataTable(getXmlFileTypeEnumeration.content,xmlString);//XML转DataTable
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="getXmlFileType">getXmlFileTypeEnumeration</param>
            <param name="xmlString">xmlString</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.ConvertDataSetToXML(System.Data.DataSet,System.Boolean)">
            <summary>
            Dataset convert XML
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=ConvertDataSetToXML(ds);//DataSet转XML
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="xmlDS"></param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.XmlToList``1(System.String,System.String,System.Boolean)">
            <summary>
            XM Lconvert LIST
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            List<MyClass> myClass=XmlToList(xmlString,"aaa");//XML转集合
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml"></param>
            <param name="rootName"></param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.XmlPars.ConvertDataSetToXMLFile(System.Data.DataSet,System.String,System.Boolean)">
            <summary>
            Dataset convert XML file
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str=ConvertDataSetToXMLFile(ds,"new.xml");//DataSet转XML文件
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="xmlDS"></param>
            <param name="xmlFile"></param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.XmlPars.getXmlFileTypeEnumeration">
            <summary>
            Get xml file type enumeration.
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.XmlPars.getXmlFileTypeEnumeration.path">
            <summary>
            Read file path.
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.XmlPars.getXmlFileTypeEnumeration.content">
            <summary>
            Read file content.
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.WinfromManager">
            <summary>
            winfrom控件刷新
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.WinfromManager.#ctor(System.Windows.Forms.Form,System.Windows.Forms.RichTextBox)">
            <summary>
            Add Form.
            </summary>
            <param name="thisForm">Form</param>
            <param name="richTextBox">richTextBox</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.WinfromManager.Refresh(System.Double)">
            <summary>
            Update winFrom in time.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            Refresh();//刷新当前控件
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="time">Refresh wait time.</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.WinfromManager.RefreshAsync(System.Int32)">
            <summary>
            A delay function that does not block the UI thread.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            RefreshAsync();//不阻塞UI界面线程的延时刷新
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="milliSecond">delay time</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.WinfromManager.richTextBoxWriteLine(System.String,System.Drawing.Color,System.Windows.Forms.RichTextBox,System.Boolean,System.Int32)">
            <summary>
            RichTextBox outputs across threads.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            richTextBoxWriteLine(richTextBox1,Color.Red);//richTextBox跨线程输出。
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="content">Message</param>
            <param name="color">Color</param>
            <param name="richTextBox">RichTextBox</param>
            <param name="ScrollToCaret">The scroll bar rolls to the latest insert row.</param>
            <param name="isRefreshAsyncTime">Refresh sleep time./milliSecond</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.WinfromManager.AdministratorStartup(System.Windows.Forms.Form,System.String[])">
            <summary>
            WinForm administrator startup.
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.ThreadTools">
            <summary>
            Multithreading
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ThreadTools.QueueUserWorkItem(System.Threading.WaitCallback)">
            <summary>
            Async delegate.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            QueueUserWorkItem(res => {
            MessageBox.Show("异步调用了");
            });//执行异步调用
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="callback">Methods that need to be executed asynchronously.</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ThreadTools.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
            <summary>
            Async delegate.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            QueueUserWorkItem(res => {
            MessageBox.Show("异步调用了");
            },sender);//执行异步调用
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="callback">Methods that need to be executed asynchronously.</param>
            <param name="state">Triggering event entity.</param>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ThreadTools.Reset">
            <summary>
            Resetting the thread pool.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            threadTools.Reset();//重置线程池
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <returns>Exception throw.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ThreadTools.RunAsync(System.Action,System.Action)">
            <summary>
            An asynchronous execution method that executes another after completion.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            RunAsync(()=> {
                   MessageBox.Show("异步调用了");
                       return true;   },//首先执行的方法
                       res => { MessageBox.Show("又被异步调用了");//接下来执行的方法
                       });//异步接替调用
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="firstFunc">The method to execute first.</param>
            <param name="next">The method to be executed next.</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.ThreadTools.RunAsync(System.Func{System.Object},System.Action{System.Object})">
            <summary>
            Asynchronous execution method.
            </summary>
            <param name="firstFunc">The method to execute first.</param>
            <param name="next">The method to be executed next.</param>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.RegeditManager">
            <summary>
            Regedit.
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.RegeditManager.defaultBaseKey">
            <summary>
            Default registry base entries.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            RegeditManager.defaultBaseKey="xxx";//默认表项
            ---------------------------------
            ]]>
            </code> 
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.RegeditManager.SetValue(JSAHelpEN.toolsFactory.RegeditManager.KeyType,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Writes to the registry, modifying the value of the specified entry if it already exists.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            SetValue(KeyType.HKEY_CURRENT_USER,"AAA","AAAA","aaabb");//写入注册表,如果指定项已经存在,则修改指定项的值
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="keytype">Enumeration of registry base entries.</param>
            <param name="key">Registry key name, excluding base key.</param>
            <param name="name">Value name.</param>
            <param name="values">value</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.RegeditManager.GetValue(JSAHelpEN.toolsFactory.RegeditManager.KeyType,System.String,System.String,System.Boolean)">
            <summary>
            Reading the registry.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            richTextBox2.Text= GetValue(KeyType.HKEY_CURRENT_USER,"AAA","AAAA");//读取注册表
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="keytype">Enumeration of registry base entries.</param>
            <param name="key">Registry key name, excluding base key.</param>
            <param name="name">Value name.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Return string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.RegeditManager.DeleteValue(JSAHelpEN.toolsFactory.RegeditManager.KeyType,System.String,System.String,System.Boolean)">
            <summary>
            Deletes a value from the registry.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            DeleteValue(KeyType.HKEY_CURRENT_USER,"AAA","AAAA");//删除注册表中的值
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="keytype">Enumeration of registry base entries.</param>
            <param name="key">Registry key name, excluding base key.</param>
            <param name="name">Value name.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.RegeditManager.DeleteSubKey(JSAHelpEN.toolsFactory.RegeditManager.KeyType,System.String,System.Boolean)">
            <summary>
            Deletes the specified entry in the registry.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            DeleteValue(KeyType.HKEY_CURRENT_USER,"AAA");//删除注册表中的指定项
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="keytype">Enumeration of registry base entries.</param>
            <param name="key">Entries in the registry, excluding base entries.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Returns a Boolean value specifying whether the operation succeeded.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.RegeditManager.IsExist(JSAHelpEN.toolsFactory.RegeditManager.KeyType,System.String,System.Boolean)">
            <summary>
            Checks whether the specified item exists.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
             if(DeleteValue(KeyType.HKEY_CURRENT_USER,"AAA")){
            .... 
            }//判断指定项是否存在
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="keytype">Base items enumerated.</param>
            <param name="key">Specifying item string.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Returns a Boolean value indicating whether the specified item exists.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.RegeditManager.GetValues(JSAHelpEN.toolsFactory.RegeditManager.KeyType,System.String,System.Boolean)">
            <summary>
            Retrieves all values associated with the specified item.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string[] vs = GetValues(KeyType.HKEY_CURRENT_USER,"AAA");//检索指定项关联的所有值
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="keytype">Base items enumerated.</param>
            <param name="key">Specifying item string.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Returns a string array of all values associated with the specified item.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.RegeditManager.SetObjectValue(JSAHelpEN.toolsFactory.RegeditManager.KeyType,System.String,System.Object,System.Boolean)">
            <summary>
            Writes all properties of an object to the specified registry.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            SetObjectValue(KeyType.HKEY_CURRENT_USER,"AAA",myClasss);//将对象所有属性写入指定注册表中
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="keyType">Enumeration of registry base entries.</param>
            <param name="key">Registry key, excluding base key.</param>
            <param name="obj">Object passed in.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.RegeditManager.KeyType">
            <summary>
            Enumeration of registry base entries.
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.RegeditManager.KeyType.HKEY_CLASS_ROOT">
            <summary>
             HKEY_CLASSES_ROOT
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.RegeditManager.KeyType.HKEY_CURRENT_USER">
            <summary>
             HKEY_CURRENT_USER
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.RegeditManager.KeyType.HKEY_LOCAL_MACHINE">
            <summary>
             HKEY_LOCAL_MACHINE
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.RegeditManager.KeyType.HKEY_USERS">
            <summary>
             HKEY_USERS
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.RegeditManager.KeyType.HKEY_CURRENT_CONFIG">
            <summary>
             HKEY_CURRENT_CONFIG
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.Kill">
            <summary>
            Kill the thread.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Kill.StrongKillProcess(System.String,System.Boolean)">
            <summary>
            Kill XXX.exe by process name.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=StrongKillProcess(myE.exe);//强杀进程
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="name">process name.</param>
            <param name="isStrongLoggerRecord"></param>
            <returns>Success:true;Faulted:false.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Kill.KillProcess(System.String,System.Boolean)">
            <summary>
            Kill XXX.exe by process name.
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=KillProcess(myE.exe);//杀死进程
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="killname"></param>
            <param name="isStrongLoggerRecord"></param>
            <returns>Success:true;Faulted:false.</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.CMD">
            <summary>
            CMD command.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.CMD.Run(System.String,System.Boolean,System.Boolean)">
            <summary>
            Perform CMD.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string str = (string)JsaSystem.CMD.Tools.Run("ipconfig",false);//执行CMD命令
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="cmd">CMD command</param>
            <param name="isOK">Does it have a return value?</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.CMD.RunShowDiaglog(System.String,System.Boolean)">
            <summary>
            Asynchronously open the CMD command window and execute the command
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
             JsaSystem.CMD.Tools.RunShowDiaglog("ipconfig");//异步打开cmd命令窗口并执行命令
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="cmd">CMD command</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.CMD.RunShowPath(System.String,System.Boolean)">
            <summary>
            Silently open the specified path folder.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            JsaSystem.CMD.Tools.RunShowPath("D:\\2020私有云");//静默打开指定路径文件夹
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="path">Folder path.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.Send">
            <summary>
            Send Request.
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.Send.PostmanPara">
            <summary>
            Add request Parameters.
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.URL">
            <summary>
            Request URL, must write.
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.Method">
            <summary>
            The request mode is POST by default.
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.Timeout">
            <summary>
            The default request timeout period is 30 seconds.
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.ReadWriteTimeout">
            <summary>
            Default request timeout period, 30 seconds Default time for writing Post data.默认写入Post数据超时间
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.Accept">
            <summary>
            The default request header values are text/ HTML, application/json, */*.
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.ContentType">
            <summary>
            The default return type is "application/json"
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.UserAgent">
            <summary>
            客户端访问信息默认Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.Encoding">
            <summary>
            The returned data encoding is UTF-8 by default and can be automatically identified.
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.Postdata">
            <summary>
            Post String Post data to be sent on a Post request.
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.PostdataByte">
            <summary>
            Post Byte type Post data to be sent during the Post request.Post请求时要发送的Byte类型的Post数据
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.CookieCollection">
            <summary>
            Cookie对象集合
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.Cookie">
            <summary>
            请求时的Cookie
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.Referer">
            <summary>
            来源地址，上次访问地址
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.CerPath">
            <summary>
            证书绝对路径
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.IsToLower">
            <summary>
            是否设置为全文小写
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.Allowautoredirect">
            <summary>
            支持跳转页面，查询结果将是跳转后的页面
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.Connectionlimit">
            <summary>
            最大连接数
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.ProxyUserName">
            <summary>
            代理Proxy 服务器用户名
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.ProxyPwd">
            <summary>
            代理 服务器密码
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.ProxyIp">
            <summary>
            代理 服务IP
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.Send.PostmanPara.Headers">
            <summary>
            <para>HTTP 标头（可选参数:Method[默认POST],Authorization,Host,Timeout[单位毫秒]，Accept,ContentType，UserAgent）</para>
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Send.Postman(JSAHelpEN.toolsFactory.Send.PostmanPara,System.Boolean)">
            <summary>
            To simulate the postman.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            PostmanPara pp = new PostmanPara();
            pp.Postdata = "123123";
            pp.Method = "POST";
            pp.URL = "https://yuanxiapi.cn/api/bing";
            string responsse=Postman(pp);//模拟POSTMAN请求
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="para">PostmanPara</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Data returned by the remote server.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Send.PostmanAsync(JSAHelpEN.toolsFactory.Send.PostmanPara)">
            <summary>
            To simulate the postman.（Async）
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            PostmanPara pp = new PostmanPara();
            pp.Postdata = "123123";
            pp.Method = "POST";
            pp.URL = "https://yuanxiapi.cn/api/bing";
            Task<string> responsse=PostmanAsync(pp);//异步POST请求
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <returns>远程服务器返回的数据</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.Send.SparMethods">
            <summary>
            备用请求类
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Send.SparMethods.SendAsync(System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            Asynchronous wait request.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
             Dictionary<string, string> obj = new Dictionary<string, string>();
               obj.Add("Url", "https://yuanxiapi.cn/api/bing");
               obj.Add("Method","GET");
            string str=SendAsync(obj);//异步请求
            ---------------------------------
            ]]>
            </code>   
            </summary>
            <param name="obj">optional parameters:（可选参数:Url,Content,Method[默认POST],Authorization,Host,Timeout[单位毫秒]，Accept,ContentType[默认application/x-www-form-urlencoded]，UserAgent[默认Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)]）</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>No exception throw!Returns response.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Send.SparMethods.Send(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            发送POST请求
            </summary>
            <param name="url"></param>
            <param name="content"></param>
            <param name="timeout">x/s</param>
            <param name="headers"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Send.SparMethods.Send(System.String)">
            <summary>
            发送GET请求
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Send.SparMethods.Get(System.String,System.Int32)">
            <summary>
            Get请求,调用示例：[richTextBox2.Text = Https.HTTP请求.Tools.Get("https://yuanxiapi.cn/api/bing",5000)]
            </summary>
            <param name="url">请求url</param>
            <param name="timeout">请求超时时限单位毫秒</param>
            <returns>响应结果</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Send.SparMethods.Post(System.String,System.String,System.Int32,System.Text.Encoding,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            post请求,调用示例：[richTextBox2.Text = Https.HTTP请求.Tools.备用.Post("https://yuanxiapi.cn/api/bing", "", 5000, Encoding.UTF8);]
            </summary>
            <param name="url">请求url</param>
            <param name="postData">请求体</param>
            <param name="timeout">超时时限单位毫秒</param>
            <param name="encoding">字符编码</param>
            <param name="contentType">类型</param>
            <param name="header">请求头</param>
            <returns>请求响应</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.RestfulService">
            <summary>
            Service
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.RestfulService.Start(System.String,System.Int32,System.Action{System.Net.HttpListenerRequest,System.Net.HttpListenerResponse,System.String},System.Text.Encoding,System.String,System.Boolean)">
            <summary>
            [1] Start services (administrator permission required) Note: Services end with "/api".
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            Start("127.0.0.1", 8080,Function, Encoding.UTF8,"Test/version1.0/");//启动服务
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="ip">Service IP address.</param>
            <param name="port">Service port number.</param>
            <param name="Function">Derive receive methods, String returns 200 or 404,500, etc., and response is the received argument.</param>
            <param name="encoder">Defines the global character encoding set.</param>
            <param name="path">The path can be as follows "Test/version1.0/api",format:[xxx/xxx/],Bring their own "api"/</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw!</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.RestfulService.Send(System.Net.HttpListenerResponse,System.String,System.Boolean)">
            <summary>
            [2] The response is returned, returned to the client, written in the derived method Function, used to process the actual.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            Send(arg2, "返回值为--"+res);//响应客户端
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="response">Output stream, corresponding to HttpListenerResponse in Function derived at Start.</param>
            <param name="returnObj">Response information in string format.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw!</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.RestfulService.Stop">
            <summary>
            [3] Stop service.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            Stop();//停止服务
            ---------------------------------
            ]]>
            </code> 
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.SQL">
            <summary>
            Sql helper  
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.SQL.globalConnect">
            <summary>
            Global configuration.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.SQL.Query``1(JSAHelpEN.toolsFactory.SQL.SqlType,System.String,System.String,System.Object[],System.Data.CommandType,System.Boolean)">
            <summary>
            Check database (support multiple databases).
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            DataTable dt = (DataTable)SQL.Query<DataTable>(SQL.SqlType.SqlServer, "SELECT * FROM dbo.Atable", "Data Source=127.0.0.1;Initial Catalog=Admin;Persist Security Info=True;User ID=xxs;Password=xzxx");//数据库查询
            "PGSQL:server=localhost; port=5432; Database=Admin; user Id=postgres; password=root"
            "mysql:Server=localhost;;Port=3306;Database=Admin;Uid=root;Pwd=root;"
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <typeparam name="T">DataSet，DataTable，DataView，DataReader...</typeparam>
            <param name="type">SqlType.</param>
            <param name="sqlStr">T-SQL</param>
            <param name="connecttionString">First character of a database connection string or encrypted files, special to join the '|' could be introduced to cipher (currently only supports JSAHelp dedicated SQL default key encryption).</param>
            <param name="commandParameters">Parameters required by the database script.</param>
            <param name="cmdTye">CommandType</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Return any type of table data (supporting dataset, datatable, dataview, datareader, and so on).</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.SQL.Update(JSAHelpEN.toolsFactory.SQL.SqlType,System.String,System.String,System.Object[],System.Data.CommandType,System.Boolean)">
            <summary>
            Add, Delete, change database (support a variety of databases)
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            SqlParameter sqlParameter = new SqlParameter("@name","大神2");
            sqlParameters[0] = sqlParameter;
            bool flag1 = SQL.Update(SQL.SqlType.SqlServer, "INSERT INTO DBO.Atable(name,age) VALUES(@name,@age)", "xxx", sqlParameters);//执行增删改
            ---------------------------------
            ]]>
            </code>
            </summary>
            <param name="type">SqlType</param>
            <param name="sqlStr">T-SQL</param>
            <param name="connecttionString">connecttionString</param>
            <param name="commandParameters">Parameters required by the database script.</param>
            <param name="cmdTye">CommandType type.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>True: the execution succeeds and the number of rows is greater than 0. False: the execution fails and the number of rows is not affected.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.SQL.ExecuteTransaction(JSAHelpEN.toolsFactory.SQL.SqlType,System.Collections.Generic.List{System.String},System.String,System.Object[],System.Data.CommandType,System.Boolean)">
            <summary>
            Perform transactions (support for multiple databases).
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag2 = SQL.ExecuteTransaction(SQL.SqlType.SqlServer,list,"xxxx", sqlParameters);//执行事务
            ---------------------------------
            ]]>
            </code>  
            <para> ]</para>
            </summary>
            <param name="type">SqlType.</param>
            <param name="sqlStr">A list of multiple SQL scripts.</param>
            <param name="connecttionString">connecttionString</param>
            <param name="commandParameters">Parameters required by the database script.</param>
            <param name="cmdTye">CommandType type.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>True: transaction commit, false: transaction rollback.</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.SQL.SqlType">
            <summary>
            Sql type.
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.SQL.SqlType.SqlServer">
            <summary>
            SqlServer
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.SQL.SqlType.NpgSql">
            <summary>
            NpgSql
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.SQL.SqlType.MySql">
            <summary>
            MySql
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.Cache">
            <summary>
            Cache
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Cache.Set``1(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            Set the cache.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               bool flag = JSAHelpEN.toolsFactory.Cache.Set<string>(str,"hello1c23",TimeSpan.FromSeconds(500));//设置缓存
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <typeparam name="T">Any</typeparam>
            <param name="key">key</param>
            <param name="value">value</param>
            <param name="timeSpan">timeSpan</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw!Returns bool.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Cache.Get``1(System.String,System.Boolean)">
            <summary>
            Gets the value of the specified cache.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
             string res = JSAHelpEN.toolsFactory.Cache.Get<string>(str).ToString();//获取指定缓存的值
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <typeparam name="T">Any</typeparam>
            <param name="key">key</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw!Returns object.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Cache.Del(System.String,System.Boolean)">
            <summary>
            Delete the specified cache.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               if (JSAHelpEN.toolsFactory.Cache.Exists(str))//缓存是否存在
              {
                JSAHelpEN.toolsFactory.Cache.Del(str);//删除指定缓存
             }
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="key">key</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw!Returns bool.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Cache.DelALL(System.Boolean)">
            <summary>
            Delete  all.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            bool flag=JSAHelpEN.toolsFactory.Cache.DelALL();//清除缓存
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw!Returns bool.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Cache.Exists(System.String,System.Boolean)">
            <summary>
            Check whether the cache exists.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               if (JSAHelpEN.toolsFactory.Cache.Exists(str))//缓存是否存在
              {
                JSAHelpEN.toolsFactory.Cache.Del(str);
             }
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="key">key</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns>Exception throw!Returns bool.</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.VerificationCode">
            <summary>
            Verification  Code.
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.VerificationCode.CreateValidateNumber(System.Int32,System.Boolean)">
            <summary>
             Generate random verification codes (alphanumeric).
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
                string sNum= JSAHelpEN.toolsFactory.VerificationCode.CreateValidateNumber(5);//生成随机验证码（数字字母）
             ---------------------------------
             ]]>
             </code> 
            </summary>
            <param name="length">length</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.VerificationCode.CreateValidateArithmetic(System.Boolean)">
            <summary>
             Generate random captcha (arithmetic equality).
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
             JSAHelpEN.toolsFactory.VerificationCode.ArithmeticEquation Vstr = JSAHelpEN.toolsFactory.VerificationCode.CreateValidateArithmetic();//生成随机验证码（算术等式）
             List<string> str = Vstr.text;   // 算数式
             string vv = Vstr.value;         // 算数式结果
             ---------------------------------
             ]]>
             </code> 
            </summary>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.VerificationCode.CreateValidateImage(JSAHelpEN.toolsFactory.VerificationCode.BitmapParam,JSAHelpEN.toolsFactory.VerificationCode.BitmapStyle,System.Boolean)">
            <summary>
             Create a captcha image.(Bitmap)
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
             JSAHelpEN.toolsFactory.VerificationCode.BitmapParam bitmapParam = new JSAHelpEN.toolsFactory.VerificationCode.BitmapParam();
             List<string> vs = new List<string>();
             vs.Add(JSAHelpEN.toolsFactory.VerificationCode.CreateValidateNumber(5));
             bitmapParam.textarr = vs;
             JSAHelpEN.toolsFactory.VerificationCode.BitmapStyle bitmapStyle = new JSAHelpEN.toolsFactory.VerificationCode.BitmapStyle();
             bitmapStyle.IsGif = false;
             Bitmap bitmap = JSAHelpEN.toolsFactory.VerificationCode.CreateValidateImage(bitmapParam, bitmapStyle);//创建验证码的图片
             pictureBox1.Image = bitmap;
             ---------------------------------
             ]]>
             </code> 
            </summary>
            <param name="bitmapParam">Verification code Parameters.</param>
             <param name="bitmapStyle">Verification code  style.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.VerificationCode.CreateValidateImageBase64String(JSAHelpEN.toolsFactory.VerificationCode.BitmapParam,JSAHelpEN.toolsFactory.VerificationCode.BitmapStyle,System.Boolean)">
            <summary>
             Create a captcha image.(Bitmap)
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
             JSAHelpEN.toolsFactory.VerificationCode.BitmapParam bitmapParam = new JSAHelpEN.toolsFactory.VerificationCode.BitmapParam();
             List<string> vs = new List<string>();
             vs.Add(JSAHelpEN.toolsFactory.VerificationCode.CreateValidateNumber(5));
             bitmapParam.textarr = vs;
             JSAHelpEN.toolsFactory.VerificationCode.BitmapStyle bitmapStyle = new JSAHelpEN.toolsFactory.VerificationCode.BitmapStyle();
             bitmapStyle.IsGif = false;
             string imgstr = JSAHelpEN.toolsFactory.VerificationCode.CreateValidateImageBase64String<string>(bitmapParam,bitmapStyle);//创建验证码的图片
             ---------------------------------
             ]]>
             </code> 
            </summary>
            <param name="bitmapParam">Verification code Parameters.</param>
             <param name="bitmapStyle">Verification code  style.</param>
            <param name="isStrongLoggerRecord">Strengthen the record,default:false.</param>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.VerificationCode.ArithmeticEquation">
            <summary>
            Verification code (arithmetic equality).验证码（算术等式）
            <example>For example:</example>
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.ArithmeticEquation.text">
            <summary>
            Arithmetic equation.算术等式
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.ArithmeticEquation.value">
            <summary>
            arithmetic value.算术值
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.VerificationCode.BitmapParam">
            <summary>
            Verification code Parameters.验证码参数
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.VerificationCode.BitmapParam.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.VerificationCode.BitmapParam.#ctor(System.Collections.Generic.List{System.String},System.Int32,System.Int32,System.Drawing.Color,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.FontStyle)">
            <summary>
            
            </summary>
            <param name="_textarr"></param>
            <param name="_width"></param>
            <param name="_height"></param>
            <param name="_backColor"></param>
            <param name="_fontName"></param>
            <param name="_fontBrushStrat"></param>
            <param name="_fontBrushEnd"></param>
            <param name="_fontStyle"></param>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.BitmapParam.textarr">
            <summary>
            验证码字符集
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.BitmapParam.width">
            <summary>
            验证码图片宽
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.BitmapParam.height">
            <summary>
            验证码图片高
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.BitmapParam.backColor">
            <summary>
            图片背景颜色
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.BitmapParam.fontName">
            <summary>
            字体
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.BitmapParam.fontBrushStrat">
            <summary>
            字体画笔颜色开始
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.BitmapParam.fontBrushEnd">
            <summary>
            字体画笔颜色结束
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.BitmapParam.fontStyle">
            <summary>
            验证码字体样式
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.VerificationCode.BitmapStyle">
            <summary>
            Gif style.Gif样式
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.VerificationCode.BitmapStyle.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.VerificationCode.BitmapStyle.#ctor(System.Boolean,JSAHelpEN.toolsFactory.VerificationCode.GifFrameType,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="_IsGif"></param>
            <param name="_FrameType"></param>
            <param name="_Delay"></param>
            <param name="_Repeat"></param>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.BitmapStyle.IsGif">
            <summary>
            是否生成Gif动画
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.BitmapStyle.FrameType">
            <summary>
             Gif帧类型
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.BitmapStyle.Delay">
            <summary>
            帧之间的延迟(毫秒)
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.BitmapStyle.Repeat">
            <summary>
            GIF重复计数(0表示永久)
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.VerificationCode.GifFrameType">
            <summary>
            Gif
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.GifFrameType.EveryFrame">
            <summary>
            
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.VerificationCode.GifFrameType.FullFrame">
            <summary>
            
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.PathHelper">
            <summary>
            Path helper
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetSavePath(JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate,System.String,System.String)">
            <summary>
            Get save file Path.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            PathHelper.GetSavePath(FilePathEnumerate.Desktop,"new.txt","ss/rr/rrss");//获取文件路径
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="keyType">FilePathEnumerate typpe.</param>
            <param name="fileName">file name</param>
            <param name="folderPath">folder path</param>
            <returns>Return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetCallDllFullPath">
            <summary>
            Get dll full path.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string sNum= JSAHelpEN.toolsFactory.PathHelper.GetCallDllFullPath();//获取本程序dll全路径
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <returns>return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetCallDllFullName">
            <summary>
            Get dll full name.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string  str = JSAHelpEN.toolsFactory.PathHelper.GetCallDllFullName();//获取本程序dll全名称
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <returns>return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetDllFullPath``1">
            <summary>
            Get dll full path.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string str = JSAHelpEN.toolsFactory.PathHelper.GetDllFullPath<Newtonsoft.Json.Converters.BinaryConverter>();//根据类型获取dll全路径
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <typeparam name="T">Any</typeparam>
            <returns>return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetDllFullName``1">
            <summary>
            Get dll full name.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string str= JSAHelpEN.toolsFactory.PathHelper.GetDllFullName<Newtonsoft.Json.Converters.BinaryConverter>();//根据类型获取dll全名称
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <typeparam name="T">Any</typeparam>
            <returns>return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetDllFullPath``1(``0)">
            <summary>
            Get the full path of the DLL based on the object instance.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string str = JSAHelpEN.toolsFactory.PathHelper.GetDllFullPath<object>(new Newtonsoft.Json.Converters.BinaryConverter());//根据对象实例获取所在DLL的全路径
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <typeparam name="T"> new Any</typeparam>
            <param name="name">Any</param>
            <returns>return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetDllFullName``1(``0)">
            <summary>
            Gets the full name of the DLL based on the object instance.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string str = JSAHelpEN.toolsFactory.PathHelper.GetDllFullName<object>(new JSAHelpEN.toolsFactory.PathHelper());//根据对象实例获取所在DLL的全名称
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <typeparam name="T">New any</typeparam>
            <param name="t">Any</param>
            <returns>return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetCallDomainPath">
            <summary>
            Gets the program domain root directory.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string str = JSAHelpEN.toolsFactory.PathHelper.GetCallDomainPath();//获取程序域根目录
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <returns>return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.InitDirectoryPath(System.String)">
            <summary>
            Initialize the target path folder. The path can be a full path to a file or a full path to a folder based on whether the path has a file name extension.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               JSAHelpEN.toolsFactory.PathHelper.InitDirectoryPath(path);//初始化目标路径文件夹 , 严格以路径是否有文件后缀名来区分是文件路径还是文件夹路径 , 可以是文件全路径 , 也可以是文件夹全路径
            ---------------------------------
            ]]>
            </code>  
            </summary>
            <param name="path">It can be the full path of a file or a folder.</param>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetFolderPath(System.String)">
            <summary>
            Get the path folder path correctly.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string str = JSAHelpEN.toolsFactory.PathHelper.GetFolderPath(path3);//正确获取路径文件夹路径
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="path">path</param>
            <returns>return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.CombineRelativePath(System.String,System.String)">
            <summary>
            Concatenation path (absolute path).
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string str = JSAHelpEN.toolsFactory.PathHelper.CombineRelativePath(path4, "XML.xml");//拼接路径（绝对路径，包含网址）
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="absolutePath">c:\abc or http://www.abc.com</param>
            <param name="pathOperator">../../;</param>
            <returns>Return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.CombineSystemRelativePath(System.String,System.String)">
            <summary>
            Concatenation path (absolute path).
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string str = JSAHelpEN.toolsFactory.PathHelper.CombineSystemRelativePath(path,"../../");//拼接路径（绝对路径，不包含网址）
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="absolutePath"> c:\abc</param>
            <param name="pathOperator">../../;</param>
            <returns>Return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.CombineHttpRelativePath(System.String,System.String)">
            <summary>
            Computes the HTTP absolute path based on the path operator.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string str = JSAHelpEN.toolsFactory.PathHelper.CombineHttpRelativePath("http://www.baidu.com/ere/qqq/rr","../aaa.html");//根据路径操作符计算HTTP绝对路径
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="absolutePath"> http://www.abc.com</param>
            <param name="pathOperator">../../123.html;</param>
            <returns>Return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.MakeRelativePath(System.String,System.String)">
            <summary>
            Generate relative paths based on absolute paths.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string str = JSAHelpEN.toolsFactory.PathHelper.MakeRelativePath(@"D:\2022Git云\JSAHelpEN\JSAHelpEN.Test\JSAHelpENForFormToNet60",@"D:\2022Git云\JSAHelpEN\JSAHelpEN.Test\JSAHelpENForFormToNet60\File\XML.xml");//根据绝对路径生成相对路径
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="startAbsolutePath">Start path.</param>
            <param name="endAbsolutePath">End path.</param>
            <returns>Return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetFilesFromFolder(System.String,System.IO.SearchOption,System.String[])">
            <summary>
            Obtain all the files that meet the conditions in the folder path.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               List<string> ll = JSAHelpEN.toolsFactory.PathHelper.GetFilesFromFolder(path5,SearchOption.AllDirectories, "*.xml");//获取文件夹路径下所有满足条件的文件
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="folderFullPath">文件夹全路径</param>
            <param name="searchOption">搜索目录的层级</param>
            <param name="dirSearchPatterns">通配符列表 默认值 null 为 提取所有文件信息 文件过滤通配符  如 : *.txt 只提取文件夹下txt文件 ; *.txt , *.json 只提取文件夹下 txt文件和json文件</param>
            <returns>Return list.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetFileName(System.String)">
            <summary>
            Intercepts file names based on the file path.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string str = JSAHelpEN.toolsFactory.PathHelper.GetFileName(path2);//根据文件路径截取文件名
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="path">path</param>
            <returns>Return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetFileNameWithFilterInvalidFileNameChars(System.String)">
            <summary>
            Remove the path slash.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string  str = JSAHelpEN.toolsFactory.PathHelper.GetFileNameWithFilterInvalidFileNameChars(path6);//去除路径斜杠
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="fileFullName">path</param>
            <returns>Return string.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetDirectoryParentName(System.String)">
            <summary>
             Gets the parent folder name.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string  str = JSAHelpEN.toolsFactory.PathHelper.GetDirectoryParentName(JSAHelpEN.toolsFactory.PathHelper.GetCallDomainPath());//获取父级文件夹名称
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="path">路径</param>
            <returns>Return path.</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.PathHelper.GetDirectoryParentPath(System.String)">
            <summary>
            Gets the parent folder name.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
               string str=JSAHelpEN.toolsFactory.PathHelper.GetDirectoryParentPath(JSAHelpEN.toolsFactory.PathHelper.GetCallDomainPath());//获取父级文件夹名称
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="path">Return path.</param>
            <returns></returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate">
            <summary>
            Files path enumerate,select a location for saving files.
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate.Desktop">
            <summary>
            Desktop
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate.MyDocuments">
            <summary>
            Documents
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate.ProgramFiles">
            <summary>
            ProgramFiles64
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate.ProgramFilesX86">
            <summary>
            ProgramFiles32
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate.SystemX86">
            <summary>
            SystemX86
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate.System">
            <summary>
            System64
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate.BaseDirectory">
            <summary>
            Current application root directory
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate.nul">
            <summary>
            default
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate.ProgramNoDebug">
            <summary>
            Program run directory
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.PathHelper.FilePathEnumerate.ProgramDebug">
            <summary>
            Program run Debug directory
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.SystemManager">
            <summary>
            获取本地机器信息的类
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.SystemManager.GetLocalIpAddress">
            <summary>
            Get IP.
            </summary>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.SystemManager.GetSystemAnyInfo(JSAHelpEN.toolsFactory.AnyPCInfoEnumerate,System.String)">
            <summary>
            Get system any info.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            string strInfo=GetSystemAnyInfo(AnyPCInfoEnumerate.Sys3,"");//获取任意PC系统信息
            ---------------------------------
            ]]>
            </code> 
            </summary>
            <param name="anyPCInfo"></param>
            <param name="str"></param>
            <returns>Success:return string;Fault:return "";</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate">
            <summary>
            Get PC info.
            <example>For example:</example>
            <code>
            <![CDATA[
            ---------------------------------
            [1] 物理内存
            [2] PC类型
            [3] 获取计算机名
            [4] 操作系统的登录用户名
            [5] IP地址
            [6] 获取硬盘ID
            [7] 获取网卡硬件地址
            [8] 获取CPU序列号代码
            [9] 获取当前系统计算位数
            [10] 本地端口号是否被占用
            [11] 获取本地一个随机可以用的端口号
            [12] 获取IPV6
            [13] 获取IPV4
            [14] 获取电脑主机名称
            ---------------------------------
            ]]>
            </code>   
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys1">
            <summary>
            物理内存
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys2">
            <summary>
            PC类型
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys3">
            <summary>
            获取计算机名
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys4">
            <summary>
            操作系统的登录用户名
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys5">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys6">
            <summary>
            获取硬盘ID
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys7">
            <summary>
            获取网卡硬件地址
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys8">
            <summary>
            获取CPU序列号代码
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys9">
            <summary>
            获取当前系统计算位数
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys10">
            <summary>
            本地端口号是否被占用
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys11">
            <summary>
            获取本地一个随机可以用的端口号
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys12">
            <summary>
            获取IPV6
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys13">
            <summary>
            获取IPV4
            </summary>
        </member>
        <member name="F:JSAHelpEN.toolsFactory.AnyPCInfoEnumerate.Sys14">
            <summary>
            获取电脑主机名称
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.QRCodeHelper">
            <summary>
            QRCode Helper
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.QRCodeHelper.GetQRCode(System.String[],JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting)">
             <summary>
             Create QRcode.
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting qRsetting = new JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting();
            qRsetting.IsCreateQRcode = true;//添加二维码设置
            qRsetting.IconSize = 8;
            string[] vs1 = { "1234567890" };
            Dictionary<Bitmap, string> dicImg = JSAHelpEN.toolsFactory.QRCodeHelper.GetQRCode(vs1, qRsetting);//创建二维码
            pictureBox1.Image = JSAHelpEN.toolsFactory.QRCodeHelper.GetQRcodeImage(dicImg);//获取赋值
             ---------------------------------
             ]]>
             </code>
             </summary>
             <param name="str">String</param>
             <param name="qRsetting">Setting</param>
             <returns>Return Dictionary.</returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting">
             <summary>
             QRCode setting.
             <example>For example:</example>
             <code>
             <![CDATA[
             ---------------------------------
            int Size:生成二维码图片的像素大小
            Color DarkColor：暗色 一般设置为Color.Black 黑色
            Color lightColor:亮色 一般设置为Color.White 白色
            IconPath:二维码水印图标路径 例如：Bitmap icon = new Bitmap("~/images/zs.png"); 默认为NULL ，加上这个二维码中间会显示一个图标
            int IconSize： 水印图标的大小比例 ，可根据自己的喜好设置
            int IconBorderWidth： 水印图标的边框
            bool IsCreateQRcode:静止区，位于二维码某一边的空白边界,用来阻止读者获取与正在浏览的二维码无关的信息 即是否绘画二维码的空白边框区域 默认为true
             ---------------------------------
             ]]>
             </code> 
             </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting.Size">
            <summary>
            生成二维码图片的像素大小
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting.DarkColor">
            <summary>
            暗色
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting.LightColor">
            <summary>
            亮色
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting.IconPath">
            <summary>
            二维码水印图标路径
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting.IconSize">
            <summary>
            水印图标的大小比例
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting.IconBorderWidth">
            <summary>
            水印图标的边框
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting.IsCreateQRcode">
            <summary>
            是否绘画二维码的空白边框区域
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting.ImageName">
            <summary>
            图片名
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting.ImageType">
            <summary>
            图片后缀（格式,默认.png [有.]）
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting.Save">
            <summary>
            是否保存本地
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting.SavePath">
            <summary>
            保存目录，默认QR
            </summary>
        </member>
        <member name="P:JSAHelpEN.toolsFactory.QRCodeHelper.QRsetting.ImageFormat">
            <summary>
            保存格式 默认png
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.QRCodeHelper.GetQRcodeImage(System.Collections.Generic.Dictionary{System.Drawing.Bitmap,System.String})">
            <summary>
            Get one image.
            </summary>
            <param name="imag">QRcode</param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.QRCodeHelper.GetQRcodeImage(System.Collections.Generic.Dictionary{System.Drawing.Bitmap,System.String},System.Int32)">
            <summary>
            Get lot of images.
            </summary>
            <param name="imag">image</param>
            <param name="num">number</param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.QRCodeHelper.GetQRcodeImagePath(System.Collections.Generic.Dictionary{System.Drawing.Bitmap,System.String})">
            <summary>
            Get one image path.
            </summary>
            <param name="imag">QRcode</param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.QRCodeHelper.GetQRcodeImagePath(System.Collections.Generic.Dictionary{System.Drawing.Bitmap,System.String},System.Int32)">
            <summary>
            Get lot of images path.
            </summary>
            <param name="imag">image</param>
            <param name="num">number</param>
            <returns></returns>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.BarCodeHelper">
            <summary>
            BarCode Helper
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.BarCodeHelper.GetBarcodeBitmap(System.String,System.String)">
            <summary>
            Get Barcode.
            </summary>
            <param name="str"></param>
            <param name="savePath"></param>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.TryCatchExtensions">
            <summary>
            Try-Catch
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})">
            <summary>
            对某对象执行指定功能与后续功能，并处理异常情况
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="source">值</param>
            <param name="action">要对值执行的主功能代码</param>
            <param name="failureAction">catch中的功能代码</param>
            <param name="successAction">主功能代码成功后执行的功能代码</param>
            <returns>主功能代码是否顺利执行</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})">
            <summary>
            对某对象执行指定功能，并处理异常情况
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="source">值</param>
            <param name="action">要对值执行的主功能代码</param>
            <param name="failureAction">catch中的功能代码</param>
            <returns>主功能代码是否顺利执行</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})">
            <summary>
            对某对象执行指定功能，并处理异常情况与返回值
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <typeparam name="TResult">返回值类型</typeparam>
            <param name="source">值</param>
            <param name="func">要对值执行的主功能代码</param>
            <param name="failureAction">catch中的功能代码</param>
            <param name="successAction">主功能代码成功后执行的功能代码</param>
            <returns>功能代码的返回值，如果出现异常，则返回对象类型的默认值</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})">
            <summary>
            对某对象执行指定功能，并处理异常情况与返回值
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <typeparam name="TResult">返回值类型</typeparam>
            <param name="source">值</param>
            <param name="func">要对值执行的主功能代码</param>
            <param name="failureAction">catch中的功能代码</param>
            <returns>功能代码的返回值，如果出现异常，则返回对象类型的默认值</returns>
            <summary>
            对某对象执行指定功能，并处理异常情况与返回值
            </summary>
            <returns>功能代码的返回值，如果出现异常，则返回对象类型的默认值</returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})">
            <summary>
            对某对象执行指定功能，并处理finally
            </summary>
        </member>
        <member name="T:JSAHelpEN.toolsFactory.Encod">
            <summary>
            Encoding
            </summary>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Encod.ToUTF8(System.String)">
            <summary>
            UTF-8
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Encod.ToGBK(System.String)">
            <summary>
            GBK
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JSAHelpEN.toolsFactory.Encod.ToUnicode(System.String)">
            <summary>
            unicode
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
    </members>
</doc>
